geom_bar(stat = "identity")+
scale_fill_manual(values=new_genera_legend,name="Genus Legend")+
theme(legend.position = "right") +
guides(fill=guide_legend(ncol=5, byrow=TRUE))+
theme_cowplot(12)+
theme(legend.text = element_text(
margin = margin(r = 10, unit = "pt")))+
theme(legend.background = element_rect(fill="lightblue", size=1, linetype="solid"), legend.margin = margin(10, 10, 10, 10))
legend <- cowplot::get_legend(L6_legend)
grid.newpage()
dev.new(width=20, height=5)
grid.draw(legend)
#Query the target vector against all_results.tsv and generate a heatmap
cols=c("#440154FF","#FDE725FF")
shotgun_lum_ucla <- generate_interregional_GMM_barplot_shotgun("Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "UCLA O. SPF Shotgun",
cols)
shotgun_lum_cs <- generate_interregional_GMM_barplot_shotgun("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "CS SPF Shotgun",
cols)
shotgun_lum_spf <- generate_interregional_GMM_barplot_shotgun("Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "SPF Gavage Shotgun",
cols)
cols_hum=c("#FDE725FF")
shotgun_lum_hum <- generate_interregional_GMM_barplot_shotgun("Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "HUM SD Gavage Shotgun",
cols_hum)
#Replace with filepath to package Microbiome.Biogeography
setwd("/home/julianne/Documents/microbiome.biogeography/")
devtools::document()
library("Microbiome.Biogeography")
setwd("/home/julianne/Documents/biogeography/")
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_S_GMM_Coef_Plots.R")
muc_file_paths <- c("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GMM-Maaslin2-SITE/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"CS_SPF/OMIXER-RPM Results/CS_GMM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GMM_site/GMM-ColonRef-CLR-Muc-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"UCLA_V_SPF_Analysis/OMIXER-RPM/WTCohort_GMM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv")
muc_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"UCLA_V_SPF",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = muc_file_paths,
cohort_prefixes = muc_cohort_prefixes)
module_key <- read.csv(here("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv"))
anno <- module_key %>% select(c("feature", "annotation"))
all_taxa <- merge(all_taxa, anno, by="feature")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","annotation","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
#id_df_wide <- id_df_wide %>% mutate(SPF_Gavage = 0)
id_df_wide$count_ones <- rowSums(id_df_wide[, c(4:9)])
df_filtered <- id_df_wide[id_df_wide$count_ones >= 3, ]
df_filtered <- df_filtered[, -which(names(df_filtered) == "count_ones")]
gmm_of_interest <- df_filtered$feature
names(gmm_of_interest) <-df_filtered$annotation
all_taxa <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
all_taxa <- all_taxa %>% select(c("feature", "Cohort","annotation")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- as.data.frame(df_wide)
all_datasets <- names(df_wide)[-(1:2)]
gmm_upset <- ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.1, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
lum_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
new_value <- "Distal_Colon"
new_coef <- 0
# color legend for coef plots
my_palette <- c(paletteer_d("basetheme::brutal",6))
names(my_palette) <-c(lum_cohort_prefixes, "UCLA_V_SPF")
cols <- my_palette
### Draw legend ---
L2_legend <-  sugar_acid +
theme(legend.position = "right") +
#guides(fill=guide_legend(nrow=8, byrow=TRUE))+
theme_cowplot(16)+
theme(legend.spacing.y = unit(1, 'cm')) +
theme(legend.background = element_rect(fill="lightblue", size=1, linetype="solid"), legend.margin = margin(1, 1, 1, 1))
### Shotgun GMM ---
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"HUM SD Gavage",
"SPF Gavage",
"UCLA O. SPF")
feature_value <- gmm_of_interest[1]
feature_annotation <- names(gmm_of_interest[1])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
muc_file_paths <- c("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GMM-Maaslin2-SITE/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"CS_SPF/OMIXER-RPM Results/CS_GMM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GMM_site/GMM-ColonRef-CLR-Muc-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"UCLA_V_SPF_Analysis/OMIXER-RPM/WTCohort_GMM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv")
muc_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"UCLA_V_SPF",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = muc_file_paths,
cohort_prefixes = muc_cohort_prefixes)
module_key <- read.csv(here("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv"))
anno <- module_key %>% select(c("feature", "annotation"))
all_taxa <- merge(all_taxa, anno, by="feature")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","annotation","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
#id_df_wide <- id_df_wide %>% mutate(SPF_Gavage = 0)
id_df_wide$count_ones <- rowSums(id_df_wide[, c(4:9)])
df_filtered <- id_df_wide[id_df_wide$count_ones >= 3, ]
df_filtered <- df_filtered[, -which(names(df_filtered) == "count_ones")]
gmm_of_interest <- df_filtered$feature
process_results_for_upset_plot <- function(file_paths, cohort_prefixes) {
data_all <- NULL
for (i in seq_along(file_paths)) {
file_path <- file_paths[i]
cohort_prefix <- cohort_prefixes[i]
# Read the results file
results <- read.table(here(file_path), header = TRUE)
# Filter the results for the specified feature
data <- filter(results, metadata == "Site" & qval<0.05)
# Add a cohort variable
cohort <- paste0(cohort_prefix)
data <- data %>% mutate(Cohort = cohort)
# Append to the combined data frame
if (is.null(data_all)) {
data_all <- data
} else {
data_all <- rbind(data_all, data)
}
}
return(data_all)
}
process_results_files <- function(file_paths, feature_value, new_value, new_coef, cohort_prefixes) {
data_all <- NULL
for (i in seq_along(file_paths)) {
file_path <- file_paths[i]
cohort_prefix <- cohort_prefixes[i]
# Read the results file
results <- read.table(here(file_path), header = TRUE)
# Filter the results for the specified feature
data <- filter(results, metadata == "Site" & feature == feature_value)
# Add a new row to the data frame
new_row <- list(metadata = "Site",
feature = feature_value,
value = new_value,
coef = new_coef,
stderr = 0,
N = NA,
N.not.0 = NA,
pval = NA,
qval = 100)
data <- rbind(data, new_row)
# Add a cohort variable
cohort <- paste0(cohort_prefix)
data <- data %>% mutate(Cohort = cohort)
# Append to the combined data frame
if (is.null(data_all)) {
data_all <- data
} else {
data_all <- rbind(data_all, data)
}
}
return(data_all)
}
process_gbm_files_shotgun <- function(file_paths, feature_value, cohort_prefixes,feature_annotation) {
data_all <- NULL
for (i in seq_along(file_paths)) {
file_path <- file_paths[i]
cohort_prefix <- cohort_prefixes[i]
# Read the results file
results <- read.table(here(file_path), header = TRUE)
# Filter the results for the specified feature
data <- filter(results, metadata == "Site" & feature == feature_value)
# Add a cohort variable
cohort <- paste0(cohort_prefix)
annotation <- feature_annotation
data <- data %>% mutate(Cohort = cohort)
data <- data %>% mutate(Annotation=annotation)
# Append to the combined data frame
if (is.null(data_all)) {
data_all <- data
} else {
data_all <- rbind(data_all, data)
}
}
return(data_all)
}
names(gmm_of_interest) <-df_filtered$annotation
all_taxa <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
all_taxa <- all_taxa %>% select(c("feature", "Cohort","annotation")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- as.data.frame(df_wide)
all_datasets <- names(df_wide)[-(1:2)]
gmm_upset <- ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.1, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
### Shotgun GMM ---
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"HUM SD Gavage",
"SPF Gavage",
"UCLA O. SPF")
feature_value <- gmm_of_interest[1]
feature_annotation <- names(gmm_of_interest[1])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- data[FALSE,]
for (i in seq_along(gmm_of_interest)){
feature_value <- gmm_of_interest[i]
feature_annotation <- names(gmm_of_interest[i])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- rbind(data,GMM_shotgun_df)
}
res_plot <- GMM_shotgun_df%>% select(c("coef", "qval","Cohort","Annotation"))
res_plot$Annotation_Cohort <- paste0(res_plot$Annotation,"_",res_plot$Cohort)
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$Annotation, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$Annotation= factor(as.character(res_plot$Annotation), levels = names(y))
names(my_palette) <-levels(res_plot$Cohort)
cols=c("#440154FF", "#FDE725FF")
res_plot$Cohort <- factor(res_plot$Cohort, levels=c("HUM SD Gavage","SPF Gavage","CS SPF", "UCLA O. SPF"))
res_plot$Annotation  <- gsub("(oxidative phase)","", c(res_plot$Annotation))
res_plot %>%
arrange(Annotation) %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "bold")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top")+
facet_wrap(~Annotation)
### HUM V Gavage ---
donors_filepath <- "Donors-Analysis/differential_GMM_site/"
lum_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
new_value <- "Distal_Colon"
new_coef <- 0
muc_file_paths <- c("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GMM-Maaslin2-SITE/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"CS_SPF/OMIXER-RPM Results/CS_GMM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GMM_site/GMM-ColonRef-CLR-Muc-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"UCLA_V_SPF_Analysis/OMIXER-RPM/WTCohort_GMM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/GMM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv")
muc_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"UCLA_V_SPF",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = muc_file_paths,
cohort_prefixes = muc_cohort_prefixes)
module_key <- read.csv(here("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv"))
anno <- module_key %>% select(c("feature", "annotation"))
all_taxa <- merge(all_taxa, anno, by="feature")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","annotation","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
#id_df_wide <- id_df_wide %>% mutate(SPF_Gavage = 0)
id_df_wide$count_ones <- rowSums(id_df_wide[, c(4:9)])
df_filtered <- id_df_wide[id_df_wide$count_ones >= 3, ]
df_filtered <- df_filtered[, -which(names(df_filtered) == "count_ones")]
gmm_of_interest <- df_filtered$feature
names(gmm_of_interest) <-df_filtered$annotation
all_taxa <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
all_taxa <- all_taxa %>% select(c("feature", "Cohort","annotation")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- as.data.frame(df_wide)
all_datasets <- names(df_wide)[-(1:2)]
gmm_upset <- ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.1, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
### Shotgun GMM ---
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"HUM SD Gavage",
"SPF Gavage",
"UCLA O. SPF")
lum_file_paths <- c("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GMM-Maaslin2-SITE/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"CS_SPF/OMIXER-RPM Results/CS_GMM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GMM_site/GMM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv")
lum_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
new_value <- "Distal_Colon"
new_coef <- 0
# color legend for coef plots
my_palette <- c(paletteer_d("basetheme::brutal",6))
names(my_palette) <-c(lum_cohort_prefixes, "UCLA_V_SPF")
cols <- my_palette[names(my_palette) %in% lum_cohort_prefixes]
# combine GMM results and append Map annotation
feature_value <- gmm_of_interest[1]
data_all <- process_results_files(lum_file_paths, feature_value, new_value, new_coef, lum_cohort_prefixes)
lum_file_paths <- c("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GMM-Maaslin2-SITE/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"CS_SPF/OMIXER-RPM Results/CS_GMM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GMM_site/GMM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv")
lum_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = lum_file_paths,
cohort_prefixes = lum_cohort_prefixes)
module_key <- read.csv(here("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv"))
anno <- module_key %>% select(c("feature", "annotation"))
all_taxa <- merge(all_taxa, anno, by="feature")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","annotation","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
id_df_wide <- id_df_wide %>% mutate(SPF_Gavage = 0)
all_taxa <- all_taxa %>% select(c("feature", "Cohort","annotation")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- df_wide %>% mutate(SPF_Gavage = 0)
df_wide <- as.data.frame(df_wide)
all_datasets <- names(df_wide)[-(1:2)]
gmm_upset <- upset(df_wide, all_datasets,width_ratio=0.1,
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
)
))
id_df_wide$count_ones <- rowSums(id_df_wide[, c(4:8)])
df_filtered <- id_df_wide[id_df_wide$count_ones >= 3, ]
df_filtered <- df_filtered[, -which(names(df_filtered) == "count_ones")]
gmm_of_interest <- df_filtered$feature
names(gmm_of_interest) <-df_filtered$annotation
### Shotgun GMM ---
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"HUM SD Gavage",
"SPF Gavage",
"UCLA O. SPF")
feature_value <- gmm_of_interest[1]
feature_annotation <- names(gmm_of_interest[1])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- data[FALSE,]
for (i in seq_along(gmm_of_interest)){
feature_value <- gmm_of_interest[i]
feature_annotation <- names(gmm_of_interest[i])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- rbind(data,GMM_shotgun_df)
}
res_plot <- GMM_shotgun_df%>% select(c("coef", "qval","Cohort","Annotation"))
res_plot$Annotation_Cohort <- paste0(res_plot$Annotation,"_",res_plot$Cohort)
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$Annotation, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$Annotation= factor(as.character(res_plot$Annotation), levels = names(y))
names(my_palette) <-levels(res_plot$Cohort)
cols=c("#440154FF", "#FDE725FF")
res_plot$Cohort <- factor(res_plot$Cohort, levels=c("HUM SD Gavage","SPF Gavage","CS SPF", "UCLA O. SPF"))
res_plot$Annotation  <- gsub("(oxidative phase)","", c(res_plot$Annotation))
res_plot %>%
arrange(Annotation) %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "bold")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top")+
facet_wrap(~Annotation)
res_plot$Annotation  <- gsub("\\(oxidative phase)","", c(res_plot$Annotation))
res_plot %>%
arrange(Annotation) %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "bold")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top")+
facet_wrap(~Annotation)
