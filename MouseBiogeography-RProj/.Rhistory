filtered_data <- all_data %>% filter(feature %in% spf_mets)%>%
filter(metadata == "Site_General") %>%
filter(qval < 0.05) %>%
filter(Cohort=="UCLA_O_SPF" | Cohort =="CS_SPF")
# Create new column "Site" based on "coef"
filtered_data <- filtered_data %>% mutate(Site = ifelse(coef < 0, "Colon", "SI"))
filtered_data <- filtered_data %>%
mutate(data_type = "16S")
shotgun_fp <- c("Shotgun/melonnpan/UCLA_O_SPF/Mets-LineSexSite_General-1-MsID/all_results.tsv",
"Shotgun/melonnpan/CS_SPF/Mets-SexSite-1-MsID/all_results.tsv",
"Shotgun/melonnpan/HUM_SD_Gavage/Mets-SexSite-1-MsID/all_results.tsv",
"Shotgun/melonnpan/SPF_Gavage/Mets-SexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = file_paths,
cohort_prefixes = cohort_prefixes,
filter_by = "Site")
# Given 0 significant metabolites pick out the features mapping to mets
all_shotgun_data <- lapply(1:length(shotgun_fp), function(i) {
df <- read_tsv(shotgun_fp[i])
df <- df %>% mutate(Cohort = shotgun_prefix[i])
return(df)
}) %>% bind_rows()
# Filter the dataframe based on values in "feature" column matching `mets`
filtered_shotgun_data <- all_shotgun_data %>% filter(feature %in% spf_mets)%>%
filter(metadata == "Site") %>%
filter(Cohort=="UCLA_O_SPF" | Cohort =="CS_SPF")
filtered_shotgun_data <- filtered_shotgun_data %>% mutate(Site = ifelse(coef < 0, "Distal_Colon", "Jejunum"))
filtered_shotgun_data <-filtered_shotgun_data %>%
mutate(data_type = "Shotgun")
# Bind the dataframe together
full_df <- rbind(filtered_shotgun_data, filtered_data)
full_df$annotation <- names(spf_mets)[match(full_df$feature, spf_mets)]
full_df$feature <- gsub("X","", full_df$feature)
full_df$feature <- gsub("\\.","-", full_df$feature)
full_df$Cohort <- factor(full_df$Cohort,
levels=c("UCLA_O_SPF","CS_SPF",
"SPF_Gavage",
"HUM_SD_Gavage","HUM_MD_Gavage"))
aa <- full_df %>% filter(annotation=="Amino Acids")
lipids <- full_df %>% filter(annotation=="Lipids")
org <- full_df %>% filter(annotation=="Small Organic Compounds")
vit <- full_df %>% filter(annotation=="Vitamins and Cofactors")
cols <- viridis::viridis(4)
names(cols) <- c("Colon", "Distal_Colon",
"Jejunum", "SI")
aa_plot <- ggplot(aa, aes(x = reorder(feature, coef), y = coef, fill = Site)) +
geom_bar(stat = "identity",position = "dodge") +
geom_hline(yintercept = 0, linetype="dashed")+
coord_flip() +
facet_wrap(~ Cohort,nrow = 1) +
labs(x = "", y = "Effect size (SI/Colon)", title = "Amino Acid Metabolites") +
theme_cowplot(12)+
theme(legend.position = "top",legend.justification = "center") +
#theme(axis.text.y = element_text(face = "italic")) +
theme(legend.background = element_rect(fill="lightblue", size=0.5, linetype="solid")) +
scale_fill_manual(values = cols) +
theme(plot.title = element_text(hjust = 0.5))
aa_plot
View(filtered_data)
View(filtered_data)
View(df_wide)
spf <- id_df_wide %>%
mutate(SPF_only = case_when(
UCLA_O_SPF == 1 & CS_SPF == 1 &
HUM_MD_Gavage == 0 & HUM_SD_Gavage == 0 & SPF_Gavage == 0 ~ "SPF",
TRUE ~ NA_character_  # Assign NA if conditions are not met
))
spf_filtered <- spf %>%
filter(SPF_only == "SPF")
View(spf_filtered)
View(df_wide)
spf <- df_wide %>%
mutate(SPF_only = case_when(
UCLA_O_SPF == 1 & CS_SPF == 1 &
HUM_MD_Gavage == 0 & HUM_SD_Gavage == 0 & SPF_Gavage == 0 ~ "SPF",
TRUE ~ NA_character_  # Assign NA if conditions are not met
))
spf_filtered <- spf %>%
filter(SPF_only == "SPF")
View(spf_filtered)
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
View(id_features)
all_taxa <- process_results_for_upset_plot(file_paths = file_paths,
cohort_prefixes = cohort_prefixes,
filter_by = "Site_General")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","Cohort","coef_dir")) %>% unique()
View(id_features)
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
View(id_df_wide)
all_taxa <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- as.data.frame(df_wide)
all_datasets <- names(df_wide)[-(1)]
View(df_wide)
mets_upset <-ComplexUpset::upset(id_df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
mets_upset
all_taxa <- process_results_for_upset_plot(file_paths = file_paths,
cohort_prefixes = cohort_prefixes,
filter_by = "Site_General")
all_taxa %>% select(c("feature", "Cohort")) %>% unique()
test <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
test <- all_taxa %>% select(c("feature", "Cohort", "Coef")) %>% unique()
test <- id_features %>% select(c("feature", "Cohort", "coef_dir")) %>% unique()
test
test <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
test <- id_features %>% select(c("feature", "Cohort", "coef_dir")) %>% unique()
test <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- as.data.frame(df_wide)
all_datasets <- names(df_wide)[-(1)]
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- as.data.frame(df_wide)
names(df_wide)
all_taxa <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- as.data.frame(df_wide)
all_datasets
all_datasets <- names(df_wide)
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
all_datasets <- cohort_prefixes
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
mets_upset
test <- id_features %>% select(c("feature", "Cohort", "coef_dir")) %>% unique()
all_taxa <- process_results_for_upset_plot(file_paths = file_paths,
cohort_prefixes = cohort_prefixes,
filter_by = "Site_General")
test <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
df_long <- test %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
View(df_wide)
test <- id_features %>% select(c("feature", "Cohort", "coef_dir")) %>% unique()
df_long <- test %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
View(df_long)
df_wide <- as.data.frame(df_wide)
View(df_wide)
View(all_taxa)
#df_wide <- df_wide %>% mutate(SPF_Gavage = 0)
?pivot_wider()
spf <- df_wide %>%
mutate(SPF_only = case_when(
UCLA_O_SPF == 1 & CS_SPF == 1 &
HUM_MD_Gavage == 0 & HUM_SD_Gavage == 0 & SPF_Gavage == 0 ~ "SPF",
TRUE ~ NA_character_  # Assign NA if conditions are not met
))
gavage <- c("HUM_MD_Gavage", "HUM_SD_Gavage",
"SPF_Gavage")
gavage <- df_wide %>%
mutate(gavage_only = case_when(
UCLA_O_SPF == 0 & CS_SPF == 0 &
rowSums(select(., HUM_MD_Gavage, HUM_SD_Gavage, SPF_Gavage) == 1) >= 2 ~ "Gavage",
TRUE ~ NA_character_
))
gavage_filtered <- gavage %>%
filter(gavage_only == "Gavage")
spf_filtered <- spf %>%
filter(SPF_only == "SPF")
spf <- df_wide %>%
mutate(SPF_only = case_when(
UCLA_O_SPF == 1 & CS_SPF == 1 &
HUM_MD_Gavage == 0 & HUM_SD_Gavage == 0 & SPF_Gavage == 0 ~ "SPF",
TRUE ~ NA_character_  # Assign NA if conditions are not met
))
View(df_wide)
all_taxa <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
all_datasets <- cohort_prefixes
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
mets_upset
df_wide$count_ones <- rowSums(df_wide %>% select(all_of(cohort_prefixes)))
id_df_wide$count_ones <- rowSums(df_wide %>% select(all_of(cohort_prefixes)))
df_filtered <- id_df_wide[id_df_wide$count_ones >= 5, ]
id_df_wide$count_ones <- rowSums(df_wide %>% select(all_of(cohort_prefixes)))
rowSums(df_wide %>% select(all_of(cohort_prefixes)))
all_taxa <- process_results_for_upset_plot(file_paths = file_paths,
cohort_prefixes = cohort_prefixes,
filter_by = "Site_General")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
id_df_wide$count_ones <- rowSums(df_wide %>% select(all_of(cohort_prefixes)))
id_df_wide$count_ones <- rowSums(df_wide %>% select(all_of(cohort_prefixes)))
spf <- df_wide %>%
mutate(SPF_only = case_when(
UCLA_O_SPF == 1 & CS_SPF == 1 &
HUM_MD_Gavage == 0 & HUM_SD_Gavage == 0 & SPF_Gavage == 0 ~ "SPF",
TRUE ~ NA_character_  # Assign NA if conditions are not met
))
gavage <- c("HUM_MD_Gavage", "HUM_SD_Gavage",
"SPF_Gavage")
gavage <- df_wide %>%
mutate(gavage_only = case_when(
UCLA_O_SPF == 0 & CS_SPF == 0 &
rowSums(select(., HUM_MD_Gavage, HUM_SD_Gavage, SPF_Gavage) == 1) >= 2 ~ "Gavage",
TRUE ~ NA_character_
))
gavage_filtered <- gavage %>%
filter(gavage_only == "Gavage")
spf_filtered <- spf %>%
filter(SPF_only == "SPF")
length(spf_filtered$feature)
length(unique(spf_filtered$feature))
unique_spf <- spf_filtered$feature
unique_gavage <- gavage_filtered$feature
spf_filtered$feature
intersect(unique_spf, spf_mets)
df_wide$count_ones <- rowSums(df_wide %>% select(all_of(cohort_prefixes)))
df_filtered <- df_wide[df_wide$count_ones >= 5, ]
length(df_filtered$feature)
length(unique(df_filtered$feature))
df_filtered <- df_filtered[, -which(names(df_filtered) == "count_ones")]
metabs_of_interest <- df_filtered$feature
metabs_of_interest
file_paths <- c("Regional-Mouse-Biogeography-Analysis/melonnpan/Mets-SeqRunLineSexSite_General_1-MouseID/all_results.tsv",
"CS_SPF/melonnpan/Mets-SeqRunSexSite_General-1-MsID/all_results.tsv",
"Donors-Analysis/melonnpan/Mets-SeqRunSexSite_General-1-MsID-DonorID/all_results.tsv",
"Humanized-Biogeography-Analysis/melonnpan/HUM_SD_Gavage/Mets-SeqRunSexSite_General-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/melonnpan/SPF_Gavage/Mets-SeqRunSexSite_General-1-MsID/all_results.tsv")
cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = file_paths,
cohort_prefixes = cohort_prefixes,
filter_by = "Site_General")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
all_taxa <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
all_datasets <- cohort_prefixes
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
mets_upset
all_datasets <- names(df_wide)
names(df_wide)
names(df_wide)[-1]
all_datasets <- df_wide %>% select(-c("feature"))
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
all_datasets <- df_wide[-1]
all_datasets
all_datasets <- names(df_wide)[-1]
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
mets_upset
all_datasets <- cohort_prefixes
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
#min_degree=3,
#themes=upset_default_themes(text=element_text(size=16), colour="black"))
#themes=upset_modify_themes(
#list(
#'intersections_matrix'=theme(text=element_text(size=16,colour = "black"))
#)
#))
mets_upset
file_paths <- c("Regional-Mouse-Biogeography-Analysis/melonnpan/Mets-SeqRunLineSexSite_General_1-MouseID/all_results.tsv",
"CS_SPF/melonnpan/Mets-SeqRunSexSite_General-1-MsID/all_results.tsv",
"Donors-Analysis/melonnpan/Mets-SeqRunSexSite_General-1-MsID-DonorID/all_results.tsv",
"Humanized-Biogeography-Analysis/melonnpan/HUM_SD_Gavage/Mets-SeqRunSexSite_General-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/melonnpan/SPF_Gavage/Mets-SeqRunSexSite_General-1-MsID/all_results.tsv")
cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = file_paths,
cohort_prefixes = cohort_prefixes,
filter_by = "Site_General")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
all_taxa <- all_taxa %>% select(c("feature", "Cohort")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
all_datasets <- cohort_prefixes
all_datasets <- names(df_wide)[-1]
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
#min_degree=3,
#themes=upset_default_themes(text=element_text(size=16), colour="black"))
#themes=upset_modify_themes(
#list(
#'intersections_matrix'=theme(text=element_text(size=16,colour = "black"))
#)
#))
mets_upset
id_df_wide$count_ones <- rowSums(id_df_wide %>% select(all_of(cohort_prefixes)))
df_filtered <- id_df_wide[id_df_wide$count_ones >= 5, ]
length(df_filtered$feature)
length(unique(df_filtered$feature))
df_filtered <- df_filtered[, -which(names(df_filtered) == "count_ones")]
metabs_of_interest <- df_filtered$feature
spf <- c("UCLA_O_SPF", "CS_SPF")
spf <- id_df_wide %>%
mutate(SPF_only = case_when(
UCLA_O_SPF == 1 & CS_SPF == 1 &
HUM_MD_Gavage == 0 & HUM_SD_Gavage == 0 & SPF_Gavage == 0 ~ "SPF",
TRUE ~ NA_character_  # Assign NA if conditions are not met
))
gavage <- c("HUM_MD_Gavage", "HUM_SD_Gavage",
"SPF_Gavage")
gavage <- id_df_wide %>%
mutate(gavage_only = case_when(
UCLA_O_SPF == 0 & CS_SPF == 0 &
rowSums(select(., HUM_MD_Gavage, HUM_SD_Gavage, SPF_Gavage) == 1) >= 2 ~ "Gavage",
TRUE ~ NA_character_
))
gavage_filtered <- gavage %>%
filter(gavage_only == "Gavage")
spf_filtered <- spf %>%
filter(SPF_only == "SPF")
length(spf_filtered$feature)
length(unique(spf_filtered$feature))
unique_spf <- spf_filtered$feature
unique_gavage <- gavage_filtered$feature
View(df_wide)
mets_upset <-ComplexUpset::upset(df_wide, all_datasets,width_ratio=0.15, name="",
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')),
themes=list(
default=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
intersections_matrix=theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
),
set_sizes=(ylab('Region-specific genera'))
))
#min_degree=3,
#themes=upset_default_themes(text=element_text(size=16), colour="black"))
#themes=upset_modify_themes(
#list(
#'intersections_matrix'=theme(text=element_text(size=16,colour = "black"))
#)
#))
mets_upset
