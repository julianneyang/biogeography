butsyn <- create_plot(data,gbm[5])+ facet_wrap(~annotation)
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GBM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GBM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GBM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GBM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"UCLA O. SPF",
"SPF Gavage",
"HUM SD Gavage")
feature_value <- gbm_of_interest[1]
feature_annotation <- names(gbm_of_interest[1])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GBM_shotgun_df <- data[FALSE,]
for (i in seq_along(gbm_of_interest)){
feature_value <- gbm_of_interest[i]
feature_annotation <- names(gbm_of_interest[i])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GBM_shotgun_df <- rbind(data,GBM_shotgun_df)
}
v <-names(gbm_of_interest)
res_plot <- GBM_shotgun_df%>% select(c("coef", "qval","Cohort","Annotation"))
res_plot$Annotation <- factor(res_plot$Annotation, levels=c(v[1], v[2],v[3],v[4],v[5]))
res_plot$Annotation_Cohort <- paste0(res_plot$Annotation,"_",res_plot$Cohort)
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$Annotation, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$Annotation= factor(as.character(res_plot$Annotation), levels = names(y))
names(my_palette) <-levels(res_plot$Cohort)
cols=c("#440154FF", "#FDE725FF")
gbm_shotgun_plot <- res_plot %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "bold")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification = "center")+
facet_wrap(~Annotation)
plot_grid(butsyn,trp, acetate, labels=c("A","B","C"),nrow=1)
plot_grid(estradiol,gaba,labels=c("D","E"))
dev.new()
plot_grid(gbm_upset, label_size = 20, labels="F")
plot_grid(gbm_shotgun_plot, label_size = 20, labels="G")
plot_grid(gbm_upset, gbm_shotgun_plot, labels=c("F","G"),label_size = 20,rel_widths = c(1.25,1))
gbm_shotgun_plot <- res_plot %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(plot.title = element_text(face = "plain")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification = "center")+
facet_wrap(~Annotation)
plot_grid(gbm_shotgun_plot, label_size = 20, labels="G")
gaba <- create_plot(data, gbm[1]) + facet_wrap(~annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))
new_value <- "Distal_Colon"
new_coef <- 0
data_all <- process_results_files(lum_file_paths, feature_value, new_value, new_coef, lum_cohort_prefixes)
final_df <- data_all[FALSE,]
for (i in seq_along(gbm_of_interest)) {
feature_value <- gbm_of_interest[i]
data_all <- process_results_files(lum_file_paths, feature_value, new_value, new_coef, lum_cohort_prefixes)
final_df <- rbind(final_df,data_all)
}
# color legend for coef plots
lum_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
my_palette <- c(paletteer_d("basetheme::brutal",6))
names(my_palette) <-c(lum_cohort_prefixes, "UCLA_V_SPF")
cols <- my_palette[names(my_palette) %in% lum_cohort_prefixes]
map <- module_key %>% select(c("feature", "annotation"))
map_data_all <- merge(final_df,map,by="feature")
data <- map_data_all
data$value <- plyr::revalue(data$value,c("Distal_Colon"="DC", "Proximal_Colon" = "PC", "Cecum" ="C","Ileum"="I", "Jejunum"="J", "Duodenum"= "D"))
data$value <- factor(data$value, levels = c("D", "J", "I", "C", "PC", "DC"))
# Plotting
create_plot <- function(data, anno) {
ggplot(data %>% filter(annotation == anno),
aes(x = value, y = coef, group = Cohort, color = Cohort)) +
geom_line(linewidth = 2) +
geom_hline(yintercept=0, linetype='dotted', col = 'black',linewidth = 1)+
geom_errorbar(aes(ymin = coef - stderr, ymax = coef + stderr), width = 0.1) +
labs(x = "", y = "") +
scale_color_manual(values = cols, name = "") +
theme_cowplot(16) +
ggtitle("") +
geom_point(size = 3, shape = 21, fill = "black") +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5))
}
gbm <- unique(data$annotation)
gaba <- create_plot(data, gbm[1]) + facet_wrap(~annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))
estradiol <- create_plot(data,gbm[2])+ facet_wrap(~annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))
acetate <- create_plot(data,gbm[3])+ facet_wrap(~annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))
trp <- create_plot(data,gbm[4])+ facet_wrap(~annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))
butsyn <- create_plot(data,gbm[5])+ facet_wrap(~annotation) +
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))
estradiol <- create_plot(data,gbm[2])+ facet_wrap(~annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))+
labs(y="Effect size")
butsyn <- create_plot(data,gbm[5])+ facet_wrap(~annotation) +
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))+
labs(y="Effect size")
plot_grid(butsyn,trp, acetate, labels=c("A","B","C"),nrow=1)
plot_grid(estradiol,gaba,labels=c("D","E"))
plot_grid(gbm_upset, gbm_shotgun_plot, labels=c("F","G"),label_size = 20,rel_widths = c(1.25,1))
gbm_shotgun_plot <- res_plot %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(plot.title = element_text(face = "plain")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification = "center")+
facet_wrap(~Annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))+
plot_grid(butsyn,trp, acetate, labels=c("A","B","C"),nrow=1)
plot_grid(gbm_upset, gbm_shotgun_plot, labels=c("F","G"),label_size = 20,rel_widths = c(1.25,1))
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GBM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GBM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GBM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GBM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"UCLA O. SPF",
"SPF Gavage",
"HUM SD Gavage")
feature_value <- gbm_of_interest[1]
feature_annotation <- names(gbm_of_interest[1])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GBM_shotgun_df <- data[FALSE,]
for (i in seq_along(gbm_of_interest)){
feature_value <- gbm_of_interest[i]
feature_annotation <- names(gbm_of_interest[i])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GBM_shotgun_df <- rbind(data,GBM_shotgun_df)
}
v <-names(gbm_of_interest)
res_plot <- GBM_shotgun_df%>% select(c("coef", "qval","Cohort","Annotation"))
res_plot$Annotation <- factor(res_plot$Annotation, levels=c(v[1], v[2],v[3],v[4],v[5]))
res_plot$Annotation_Cohort <- paste0(res_plot$Annotation,"_",res_plot$Cohort)
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$Annotation, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$Annotation= factor(as.character(res_plot$Annotation), levels = names(y))
names(my_palette) <-levels(res_plot$Cohort)
cols=c("#440154FF", "#FDE725FF")
gbm_shotgun_plot <- res_plot %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(plot.title = element_text(face = "plain")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification = "center")+
facet_wrap(~Annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))+
plot_grid(butsyn,trp, acetate, labels=c("A","B","C"),nrow=1)
plot_grid(gbm_shotgun_plot, label_size = 20, labels="G")
plot_grid(gbm_upset, gbm_shotgun_plot, labels=c("F","G"),label_size = 20,rel_widths = c(1.25,1))
gbm_shotgun_plot <- res_plot %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(plot.title = element_text(face = "plain")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top",
legend.justification = "center")+
facet_wrap(~Annotation)+
theme(legend.position="none",strip.background=element_rect(colour="black",fill="white"))
plot_grid(gbm_upset, gbm_shotgun_plot, labels=c("F","G"),label_size = 20,rel_widths = c(1.25,1))
plot_grid(gbm_upset, label_size = 20, labels="F")
plot_grid(gbm_shotgun_plot, label_size = 20, labels="G")
input_data <- readr::read_delim(here("Humanized-Biogeography-Analysis/Site_Subsets/export_L6_Luminal_min10000_Humanized_Colonized-ComBat-Adjusted-ASV/feature-table.tsv"), delim="\t") # choose filtered non rarefied csv file
input_data <- subset(input_data, !grepl("Mitochondria|Chloroplast", OTU.ID))
input_data <- as.data.frame(input_data)
row.names(input_data)<-input_data$OTU.ID
df_input_data <- select(input_data, -c("taxonomy","OTU.ID"))
input_metadata <-readr::read_delim(here("Humanized-Biogeography-Analysis/starting_files/Humanized-Metadata.tsv"),delim="\t") #mapping file
input_metadata <- as.data.frame(input_metadata)
row.names(input_metadata) <- input_metadata$SampleID
input_metadata <- input_metadata %>% select(-c("SampleID"))
target <- colnames(df_input_data)
input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(input_metadata)
df_input_metadata<-input_metadata
df_input_metadata$MouseID <- factor(df_input_metadata$MouseID)
df_input_metadata$Sequencing_Run <- factor(df_input_metadata$Sequencing_Run)
df_input_metadata$Sex <- factor(df_input_metadata$Sex)
sapply(df_input_metadata,levels)
luminal<-readr::read_delim(here("Humanized-Biogeography-Analysis/differential_genera_site/HUM_L6-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv"),delim="\t")
duodenum_significant<-filter(luminal, metadata=="Site" & value=="Duodenum" &qval<0.05)
a<-duodenum_significant$feature
jejunum_significant<-filter(luminal, metadata=="Site" & value=="Jejunum" &qval<0.05)
b<-jejunum_significant$feature
ileum_significant<-filter(luminal, metadata=="Site" & value=="Ileum" &qval<0.05)
c<-ileum_significant$feature
cecum_significant<-filter(luminal, metadata=="Site" & value=="Cecum" &qval<0.05)
d<-cecum_significant$feature
pc_significant<-filter(luminal, metadata=="Site" & value=="Proximal_Colon" &qval<0.05)
e<-pc_significant$feature
DC_significant<-filter(luminal, metadata=="Site" & value=="Distal_Colon" &qval<0.05)
f<-DC_significant$feature
joinab<- union(a,b)
joincd<- union(c,d)
joinef<- union(e,f)
joinabcd <- union(joinab,joincd)
target<-union(joinabcd,joinef)
df<-target
df<-as.data.frame(df)
df$feature <- df[,1]
df$Phylum <- gsub(".*\\.p__", "", df$feature)
df$Phylum <- gsub("\\.c__.*", "", df$Phylum)
df$Order <- gsub(".*\\.o__", "", df$feature)
df$Order <- gsub("\\.f__.*", "", df$Order)
df$Order <- paste0(df$Order, " (o)")
df$Family <- gsub(".*\\.f__", "", df$feature)
df$Family <- gsub("\\.g__.*", "", df$Family)
df$Family<- paste0(df$Family, " (f)")
df$Genus <- gsub(".*\\.g__", "", df$feature)
df <- df %>%
mutate(annotation = ifelse(Genus!="", Genus,
ifelse(Family!=" (f)", Family, Order)))
readr::write_csv(df,here("Humanized-Biogeography-Analysis/differential_genera_site/HUM_Genus_Luminal_taxonomy.csv"))
#Query target vector against all results
luminal<-readr::read_delim(here("Humanized-Biogeography-Analysis/differential_genera_site/HUM_L6-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv"))
data <- luminal %>% filter(metadata=="Site" & qval<0.05)
luminal_all<-filter(luminal, metadata=="Site")
#length(luminal_all$value[luminal_all$value=="Duodenum"])
data<-luminal_all[luminal_all$feature %in% target, ]
length(target)
#make an empty dataframe to store the reference variable
y <- data.frame(matrix(NA,nrow=length(target),ncol=9))
#Assign x, a string vector, to y as its column names:
x <- c(colnames(data))
colnames(y) <- x
y$feature<-target
y$coef <- 0
y$value <- "Distal_Colon"
y$metadata <-"Site"
y$qval<-100
site_heatmap<-rbind(data,y)
annotation <- readr::read_csv(here("Humanized-Biogeography-Analysis/differential_genera_site/HUM_Genus_Luminal_taxonomy.csv"))
data<- (merge(site_heatmap, annotation, by = 'feature'))
data$Phylum_Genus<-paste(data$Phylum,data$annotation,sep=" : ")
qval<-data$qval
asterisk<-c("")
for (item in qval){
if (item < 0.05){
asterisk<-c(asterisk,"*")
}
else if (item=="NA"){}
else {
asterisk<-c(asterisk,"")
}
}
asterisk<-asterisk[-1]
data$asterisk<-asterisk
data <- data %>% mutate(coef_d= ifelse(coef>2, 2, coef))
data$coef_d[data$coef_d < (-2)] <- (-2)
summary(data$coef_d)
y = tapply(data$coef_d, data$Phylum_Genus, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
data$Phylum_Genus= factor(as.character(data$Phylum_Genus), levels = names(y))
data$value = revalue(data$value, c("Distal_Colon"="DC", "Proximal_Colon" = "PC", "Cecum" ="Cec","Ileum"="Ile", "Jejunum"="Jej", "Duodenum"= "Duo"))
data$value = factor(data$value, levels=c("Duo", "Jej", "Ile", "Cec", "PC", "DC"))
ggplotdata<-data
#ggplotdata<-ggplotdata[!duplicated(ggplotdata$Genus), ]
cols=c("#440154FF","#46337EFF", "#365C8DFF" ,"#277F8EFF", "#1FA187FF", "#4AC16DFF", "#9FDA3AFF", "#FDE725FF")
bk =c(-2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2)
dev.new(width=15, height=10)  # can adjust window size of the plot output this way
dev.new(width=15, height=10)  # can adjust window size of the plot output this way
ggplot(ggplotdata, aes(x = value, y=Phylum_Genus)) + geom_tile(aes(fill = coef_d),colour="white",size=0.25) +
geom_text(aes(label=asterisk)) +
scale_fill_stepsn(breaks=bk, values = NULL, colors = cols) +
theme_cowplot(12) +
theme(legend.position="top",legend.justification = "center") +
xlab("")+
ylab("") +
guides(fill=guide_colourbar(title="",label=TRUE,barwidth = 15))+
ggtitle("Mucosal - Hum Mice")
### HUM V Gavage ---
donors_filepath <- "Donors-Analysis/differential_GBM_site/"
lumtarget <- find_concordant_features_across_sites(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/significant_results.tsv"))
muctarget <- find_concordant_features_across_sites(paste0(donors_filepath,"GBM-ColonRef-CLR-Muc-ComBat-SeqRunSexSite-1-MsID-DonorID/significant_results.tsv"))
cols=c("#365C8DFF" ,"#277F8EFF", "#1FA187FF", "#4AC16DFF")
bk =c( -1, -0.5, 0, 0.5, 1)
hum_v_muc_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Muc-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = muctarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Mucosal",
cols,
bk)
cols=c("#440154FF","#46337EFF", "#365C8DFF" ,"#277F8EFF", "#1FA187FF", "#4AC16DFF", "#9FDA3AFF", "#FDE725FF")
bk =c(-2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2)
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)
library(cowplot)
library(ggplot2)
library(RColorBrewer)
library(plyr)
library(ggpubr)
library(tidyr)
library(dplyr)
library(gridExtra)
hum_v_muc_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Muc-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = muctarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Mucosal",
cols,
bk)
cols=c("#440154FF","#46337EFF", "#365C8DFF" ,"#277F8EFF", "#1FA187FF", "#4AC16DFF", "#9FDA3AFF", "#FDE725FF")
bk =c(-2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2)
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)
hum_v_lum_GBM_map
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)+
theme(legend.position = "top")
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)+
theme(legend.position = "top")
hum_v_lum_GBM_map
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)+
theme(legend.position = "top")+
guides(color = guide_legend(title = "Effect size (*q<0.05)"))
hum_v_lum_GBM_map
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)+
theme(legend.position = "top")+
guides(fill = guide_legend(title = "Effect size (*q<0.05)"))
hum_v_lum_GBM_map
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)+
theme(legend.position = "top",legend.title = "Effect size (*q<0.05")#+
hum_v_lum_GBM_map
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)+
theme(legend.position = "top",legend.title = element_text("Effect size (*q<0.05"))#+
hum_v_lum_GBM_map
hum_v_lum_GBM_map <- generate_GBM_heat_map_by_site(paste0(donors_filepath,"GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"),
targetvector = lumtarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM V Gavage Luminal",
cols,
bk)+
theme(legend.position = "top")#+
### Shotgun barplots ---
cols=c("#440154FF", "#FDE725FF")
## UCLA O SPF
result2 <- generate_interregional_taxa_barplot_shotgun_only_named_species(
path_to_significant_results_tsv = "Shotgun/UCLA_O_SPF/Species_DCvsJej_CLR_LineSexSite-1-MsID/significant_results.tsv",
titlestring="UCLA O. SPF",
colorvector = cols)
df <- result2$dataframe
library(gplots)
library(dendextend)
library(here)
library(ComplexUpset)
library(tidyverse)
library(cowplot)
library(gridExtra)
library(grid)
#Replace with filepath to package Microbiome.Biogeography
setwd("/home/julianne/Documents/microbiome.biogeography/")
devtools::document()
library("Microbiome.Biogeography")
setwd("/home/julianne/Documents/biogeography/")
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_4_Genus_Site_Heatmaps_Clustering.R")
### Shotgun barplots ---
cols=c("#440154FF", "#FDE725FF")
## UCLA O SPF
result2 <- generate_interregional_taxa_barplot_shotgun_only_named_species(
path_to_significant_results_tsv = "Shotgun/UCLA_O_SPF/Species_DCvsJej_CLR_LineSexSite-1-MsID/significant_results.tsv",
titlestring="UCLA O. SPF",
colorvector = cols)
df <- result2$dataframe
phylum_names <- df$Phylum
select_cols <- c("Firmicutes"="#aa0000ff", "Bacteroidetes"="#800080ff","Actinobacteria"="#008000ff",
"Bacteria_unclassified"="black", "Candidatus_Saccharibacteria"="#808000ff","Proteobacteria"="#00ffffff")
seecolor::print_color(select_cols)
phylum_colors <- select_cols
names(select_cols)
# Create a named vector of colors using the phylum color vector
color_mapping <- phylum_colors[phylum_names]
print(color_mapping)
ucla_o_shotgun_species <- result2$plot+
theme(axis.text.y = element_text(colour = color_mapping))+
theme(legend.position = "right")
ucla_o_shotgun_species
cs_result <- generate_interregional_taxa_barplot_shotgun_only_named_species(path_to_significant_results_tsv = "Shotgun/CS_SPF/Species_DCvsJej_CLR_SexSite-1-MsID/significant_results.tsv",
titlestring="CS SPF",
colorvector = cols)
df <- cs_result$dataframe
phylum_names <- df$Phylum
# Create a named vector of colors using the phylum color vector
color_mapping <- phylum_colors[phylum_names]
print(color_mapping)
cs_shotgun_species <- cs_result$plot +
theme(axis.text.y = element_text(colour = color_mapping))
cs_shotgun_species
## SPF Gavage
cols=c("#FDE725FF")
spf_result <- generate_interregional_taxa_barplot_shotgun_only_named_species(path_to_significant_results_tsv = "Shotgun/SPF_Gavage/Species_DCvsJej_CLR_SexSite-1-MsID/significant_results.tsv",
titlestring="SPF Gavage",
colorvector = cols)
df <- spf_result$dataframe
phylum_names <- df$Phylum
# Create a named vector of colors using the phylum color vector
color_mapping <- phylum_colors[phylum_names]
print(color_mapping)
spf_shotgun_species <- spf_result$plot +
theme(axis.text.y = element_text(colour = color_mapping))
spf_shotgun_species
## HUM Gavage --
cols=c("#440154FF", "#FDE725FF")
hum_result <- generate_interregional_taxa_barplot_shotgun_only_named_species(path_to_significant_results_tsv = "Shotgun/HUM_Gavage/Species_DCvsJej_CLR_SexSite-1-MsID/significant_results.tsv",
titlestring="HUM SD Gavage",
colorvector = cols)
df <- hum_result$dataframe
phylum_names <- df$Phylum
color_mapping <- phylum_colors[phylum_names]
print(color_mapping)
hum_shotgun_species <- hum_result$plot +
theme(axis.text.y = element_text(colour = color_mapping))
hum_shotgun_species
### Final Figure bottom half
ucla_o_shotgun_species<-ucla_o_shotgun_species+theme(legend.position="none")
plot_grid(taxa_upset, ucla_o_shotgun_species,
labels=c("F","G"),
label_size = 20)
