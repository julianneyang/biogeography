y = tapply(res_plot$coef, res_plot$hierachy_annotations, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$hierachy_annotations= factor(as.character(res_plot$hierachy_annotations), levels = names(y))
g1<- res_plot %>%
arrange(coef) %>%
filter(pval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, hierachy_annotations, fill = site)) +
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "italic")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
theme(legend.position = "none")+
ggtitle({{titlestring}}) +
theme(plot.title = element_text(hjust = 0.5))
}
else if(ystring=="metabolic_map"){
res_plot <- data %>% select(c("coef", "pval","qval","metabolic_map"))
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$metabolic_map, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$metabolic_map= factor(as.character(res_plot$metabolic_map), levels = names(y))
res_plot <- res_plot %>%
mutate(qval_rounded = round(qval, 2))
g1<- res_plot %>%
arrange(coef) %>%
filter(pval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, metabolic_map, fill = site)) +
geom_bar(stat = "identity") +
geom_text(aes(label = qval_rounded),position = position_stack(vjust = 0.5),
colour = "white")+
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "italic")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
theme(legend.position = "none")+
ggtitle({{titlestring}}) +
theme(plot.title = element_text(hjust = 0.5))
}
else if(ystring=="feature_annotations"){
res_plot <- data %>% select(c("coef", "pval","qval","feature_annotations"))
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$feature_annotations, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$feature_annotations= factor(as.character(res_plot$feature_annotations), levels = names(y))
g1<- res_plot %>%
arrange(coef) %>%
filter(pval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, feature_annotations, fill = site)) +
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "italic")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
theme(legend.position = "none")+
ggtitle({{titlestring}}) +
theme(plot.title = element_text(hjust = 0.5))
}
else if(ystring=="Map"){
ggplotdata<-data
ggplotdata1<- ggplotdata %>%
group_by(value,Map) %>%
summarise_at(vars(qval), list(qval_d = min))
ggplotdata1$Site_Map <- paste(ggplotdata1$value, ggplotdata1$Map)
ggplotdata2<- ggplotdata %>%
group_by(value,Map) %>%
summarise_at(vars(coef), list(coef_mean = median))
ggplotdata2$Site_Map <- paste(ggplotdata2$value, ggplotdata2$Map)
ggplotdata <- merge(ggplotdata1, ggplotdata2, by= "Site_Map")
ggplotdata$Map <- ggplotdata$Map.x
ggplotdata$value <- ggplotdata$value.x
res_plot <- ggplotdata %>% select(c("coef_mean", "qval_d","Map"))
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef_mean< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef_mean, res_plot$Map, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$Map= factor(as.character(res_plot$Map), levels = names(y))
res_plot <- res_plot %>%
mutate(qval_rounded = round(qval, 2))
g1<- res_plot %>%
arrange(coef_mean) %>%
filter(qval_d < 0.05, abs(coef_mean) > 0) %>%
ggplot2::ggplot(aes(coef_mean, Map, fill = site)) +
geom_bar(stat = "identity") +
geom_text(aes(label = qval_rounded),position = position_stack(vjust = 0.5),
colour = "white")+
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "italic")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
theme(legend.position = "none")+
ggtitle({{titlestring}}) +
theme(plot.title = element_text(hjust = 0.5))
}
return(g1)
}
shotgun_lum_ucla <- generate_interregional_GBM_barplot_shotgun("Shotgun/UCLA_O_SPF/GBM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"GBM_Module_Key.csv",
colorvector = cols,
titlestring = "UCLA O. SPF Shotgun")
shotgun_lum_ucla$plot
shotgun_lum_cs <- generate_interregional_GBM_barplot_shotgun("Shotgun/CS_SPF/GBM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"GBM_Module_Key.csv",
colorvector = cols,
titlestring = "UCLA O. SPF Shotgun")
devtools::install_github("jacobslabucla/microbiome.biogeography")
library("Microbiome.Biogeography")
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_Interregional_Taxa_Longitudinal.R")
### Function ---
data_all <- NULL
process_results_for_upset_plot_interregional <- function(file_paths, cohort_prefixes) {
for (i in seq_along(file_paths)) {
file_path <- file_paths[i]
cohort_prefix <- cohort_prefixes[i]
# Read the results file
results <- read.delim(here(file_path), header = TRUE)
# Filter the results for the specified feature
data <- filter(results, metadata == "Site_General" & qval<0.05)
# Add a cohort variable
cohort <- paste0(cohort_prefix)
data <- data %>% mutate(Cohort = cohort)
# Append to the combined data frame
if (is.null(data_all)) {
data_all <- data
} else {
data_all <- rbind(data_all, data)
}
}
return(data_all)
}
### Identify overlapping features ---
lum_file_paths <- c(
"Regional-Mouse-Biogeography-Analysis/2021-8-Microbiome-Batch-Correction-Analysis/differential_genera_site/L6-ColonRef-CLR-Lum-ComBat-SeqRunLineSexSite_General-1-MsID/all_results.tsv",
"CS_SPF/differential_genera_site/L6-ColonRef-CLR-Lum-ComBat-SeqRunSexSite_General-1-MsID/all_results.tsv",
"Donors-Analysis/differential_genera_site/L6-ColonRef-CLR-Lum-ComBat-SeqRunSexSite_General-1-MsID-DonorID/all_results.tsv",
"Humanized-Biogeography-Analysis/differential_genera_site/SPF_L6-CLR-Lum-ComBat-SeqRunSexSite_General-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/differential_genera_site/HUM_L6-CLR-Lum-ComBat-SeqRunSexSite_General-1-MsID/all_results.tsv")
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GBM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GBM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GBM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GBM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS_SPF_Shotgun",
"UCLA_O_SPF_Shotgun",
"SPF_Gavage_Shotgun",
"HUM_Gavage_Shotgun")
# GABA degradation
feature_value <- "MGB019"
feature_annotation <- "GABA degradation"
gaba_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
# 17 B- estradiol degradation
feature_value <- "MGB031"
feature_annotation <- "17 B-estradiol degradation"
estradiol_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
process_gbm_files_shotgun <- function(file_paths, feature_value, cohort_prefixes,feature_annotation) {
data_all <- NULL
for (i in seq_along(file_paths)) {
file_path <- file_paths[i]
cohort_prefix <- cohort_prefixes[i]
# Read the results file
results <- read.table(here(file_path), header = TRUE)
# Filter the results for the specified feature
data <- filter(results, metadata == "Site" & feature == feature_value)
# Add a cohort variable
cohort <- paste0(cohort_prefix)
annotation <- feature_annotation
data <- data %>% mutate(Cohort = cohort)
data <- data %>% mutate(Annotation=annotation)
# Append to the combined data frame
if (is.null(data_all)) {
data_all <- data
} else {
data_all <- rbind(data_all, data)
}
}
return(data_all)
}
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GBM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GBM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GBM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GBM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS_SPF_Shotgun",
"UCLA_O_SPF_Shotgun",
"SPF_Gavage_Shotgun",
"HUM_Gavage_Shotgun")
# GABA degradation
feature_value <- "MGB019"
feature_annotation <- "GABA degradation"
gaba_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
# 17 B- estradiol degradation
feature_value <- "MGB031"
feature_annotation <- "17 B-estradiol degradation"
estradiol_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
# NO degradation I
feature_value <- "MGB027"
feature_annotation <- "NO degradation"
library(here)
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GBM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GBM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GBM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GBM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS_SPF_Shotgun",
"UCLA_O_SPF_Shotgun",
"SPF_Gavage_Shotgun",
"HUM_Gavage_Shotgun")
# GABA degradation
feature_value <- "MGB019"
feature_annotation <- "GABA degradation"
gaba_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
# 17 B- estradiol degradation
feature_value <- "MGB031"
feature_annotation <- "17 B-estradiol degradation"
estradiol_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
# NO degradation I
feature_value <- "MGB027"
feature_annotation <- "NO degradation"
no_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
# Tryptophan degradation
feature_value <- "MGB049"
feature_annotation <- "Tryptophan degradation"
trp_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
# Butyrate Synthesis I
feature_value <- "MGB052"
feature_annotation <- "Butyrate Synthesis I"
but_shotgun <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
res <- rbind(gaba_shotgun, estradiol_shotgun,
no_shotgun, trp_shotgun, but_shotgun)
res_plot <- res %>% select(c("coef", "qval","Cohort","Annotation"))
res_plot$Annotation_Cohort <- paste0(res_plot$Annotation,"_",res_plot$Cohort)
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$Annotation, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$Annotation= factor(as.character(res_plot$Annotation), levels = names(y))
names(my_palette) <-levels(res_plot$Cohort)
res_plot %>%
arrange(Annotation) %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = Cohort)) +
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "italic")) +
scale_fill_manual(values = my_palette) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
theme(legend.position = "right")+
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5))+
facet_grid(~Annotation)
file_paths <- c(
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GBM-Maaslin2-SITE/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GBM-Maaslin2-SITE/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"CS-Facility-Analysis/OMIXER-RPM Results/CS_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"CS-Facility-Analysis/OMIXER-RPM Results/CS_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"UCLA_V_SPF_Analysis/OMIXER-RPM/WT_Val_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GBM_site/GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"Donors-Analysis/differential_GBM_site/GBM-ColonRef-CLR-Muc-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv"
)
res_plot %>%
arrange(Annotation) %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = Cohort)) +
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "italic")) +
scale_fill_manual(values = my_palette) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
theme(legend.position = "right")+
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5))+
facet_grid(~Annotation)
my_palette <- c(paletteer_d("basetheme::brutal",10), paletteer_d("basetheme::clean",1))
data_all_2$Cohort <- factor(data_all_2$Cohort)
names(my_palette) <-levels(data_all_2$Cohort)
#Query the target vector against all_results.tsv and generate a heatmap
cols=c("#440154FF","#FDE725FF")
shotgun_lum_ucla <- generate_interregional_GMM_barplot_shotgun("Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "UCLA O. SPF Shotgun",
cols)
shotgun_lum_cs <- generate_interregional_GMM_barplot_shotgun("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "CS SPF Shotgun",
cols)
shotgun_lum_spf <- generate_interregional_GMM_barplot_shotgun("Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "SPF Gavage Shotgun",
cols)
shotgun_lum_hum <- generate_interregional_GMM_barplot_shotgun("Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv",
"Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv",
ystring="metabolic_map",
titlestring= "HUM SD Gavage Shotgun",
cols)
### Final Figure ---
dev.new()
dev.new()
plot_grid(shotgun_lum_ucla,  shotgun_lum_cs,
shotgun_lum_spf,shotgun_lum_hum,
nrow=2, ncol=2,
labels=c("A","B","C","D"),
label_size =16,
rel_heights = c(1,1,0.25,0.25))
shotgun_lum_ucla <- generate_interregional_GBM_barplot_shotgun("Shotgun/UCLA_O_SPF/GBM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"GBM_Module_Key.csv",
colorvector = cols,
titlestring = "UCLA O. SPF Shotgun")
### Shotgun GMM ---
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"HUM SD Gavage",
"SPF Gavage",
"UCLA O. SPF")
feature_value <- gmm_of_interest[1]
feature_annotation <- names(gmm_of_interest[1])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- data[FALSE,]
for (i in seq_along(gmm_of_interest)){
feature_value <- gmm_of_interest[i]
feature_annotation <- names(gmm_of_interest[i])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- rbind(data,GMM_shotgun_df)
}
res_plot <- GMM_shotgun_df%>% select(c("coef", "qval","Cohort","Annotation"))
res_plot$Annotation_Cohort <- paste0(res_plot$Annotation,"_",res_plot$Cohort)
res_plot <- unique(res_plot)
# combine GMM results and append Map annotation
gmm_of_interest <- readRDS(here("Highlighted_GMM_Fig_6.RDS"))
### Shotgun GMM ---
# Define the file paths, cohort prefixes, and other parameters
shotgun_fp <- c("Shotgun/CS_SPF/GMM-DCvsJej-CLR-CS-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/HUM_Gavage/GMM-DCvsJej-CLR-HUM-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/SPF_Gavage/GMM-DCvsJej-CLR-SPF-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Shotgun/UCLA_O_SPF/GMM-DCvsJej-CLR-UCLA-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv")
shotgun_prefix <- c("CS SPF",
"HUM SD Gavage",
"SPF Gavage",
"UCLA O. SPF")
feature_value <- gmm_of_interest[1]
feature_annotation <- names(gmm_of_interest[1])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- data[FALSE,]
for (i in seq_along(gmm_of_interest)){
feature_value <- gmm_of_interest[i]
feature_annotation <- names(gmm_of_interest[i])
data <- process_gbm_files_shotgun(shotgun_fp, feature_value, shotgun_prefix,feature_annotation)
GMM_shotgun_df <- rbind(data,GMM_shotgun_df)
}
res_plot <- GMM_shotgun_df%>% select(c("coef", "qval","Cohort","Annotation"))
res_plot$Annotation_Cohort <- paste0(res_plot$Annotation,"_",res_plot$Cohort)
res_plot <- unique(res_plot)
res_plot <- res_plot %>%
mutate(site = ifelse(coef< 0, "Distal_Colon", "Jejunum"))
y = tapply(res_plot$coef, res_plot$Annotation, function(y) mean(y))  # orders the genera by the highest fold change of any ASV in the genus; can change max(y) to mean(y) if you want to order genera by the average log2 fold change
y = sort(y, FALSE)   #switch to TRUE to reverse direction
res_plot$Annotation= factor(as.character(res_plot$Annotation), levels = names(y))
names(my_palette) <-levels(res_plot$Cohort)
cols=c("#440154FF", "#FDE725FF")
res_plot$Cohort <- factor(res_plot$Cohort, levels=c("HUM SD Gavage","SPF Gavage","CS SPF", "UCLA O. SPF"))
res_plot$Annotation  <- gsub("pentose phosphate pathway \\(oxidative phase\\)", "pentose phosphate pathway", res_plot$Annotation)
res_plot %>%
arrange(Annotation) %>%
# filter(qval < 0.05, abs(coef) > 0) %>%
ggplot2::ggplot(aes(coef, Cohort, fill = site)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black")+
geom_bar(stat = "identity") +
cowplot::theme_cowplot(12) +
theme(axis.text.y = element_text(face = "bold")) +
scale_fill_manual(values = cols) +
labs(x = "Effect size (Jejunum/Distal_Colon)",
y = "",
fill = "") +
ggtitle("Shotgun Data") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "top")+
facet_wrap(~Annotation)
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_6_GMM_Coef_Plots.R")
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_6_GMM_Coef_Plots.R")
###### The Big and Tragic Rearrangement of Mouse Biogeography ---
### Date: 3.10.2023
### Figure Number: 6
### Figure Contents: GMM Site Heatmaps for all Cohorts
###### whining ends here ---
library(ggplot2)
library(tidyverse)
#library(rlang)
library(cowplot)
library(viridis)
#library(plyr)
library(gridExtra)
library(paletteer)
library(ComplexUpset)
library(here)
#devtools::install_github("jacobslabucla/Microbiome.Biogeography")
library("Microbiome.Biogeography")
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_6_GMM_Coef_Plots.R")
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_6_and_S14_GMM_Coef_Plots.R")
###### The Big and Tragic Rearrangement of Mouse Biogeography ---
### Date: 3.10.2023
### Figure Number: 6
### Figure Contents: GMM Site Heatmaps for all Cohorts
###### whining ends here ---
library(ggplot2)
library(tidyverse)
#library(rlang)
library(cowplot)
library(viridis)
#library(plyr)
library(gridExtra)
library(paletteer)
library(ComplexUpset)
library(here)
#devtools::install_github("jacobslabucla/Microbiome.Biogeography")
library("Microbiome.Biogeography")
here::i_am("MouseBiogeography-RProj/Final_Figures/Figure_6_and_S14_GMM_Coef_Plots.R")
### Upset Plot ---
lum_file_paths <- c("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GMM-Maaslin2-SITE/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"CS_SPF/OMIXER-RPM Results/CS_GMM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GMM_site/GMM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv")
lum_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
all_taxa <- process_results_for_upset_plot(file_paths = lum_file_paths,
cohort_prefixes = lum_cohort_prefixes)
module_key <- read.csv(here("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/Revised_Module_Key.csv"))
anno <- module_key %>% select(c("feature", "annotation"))
all_taxa <- merge(all_taxa, anno, by="feature")
id_features <- all_taxa %>% mutate(coef_dir = ifelse(coef > 0, "POS", "NEG"))
id_features <- id_features%>% select(c("feature","annotation","Cohort","coef_dir")) %>% unique()
id_f_long <- id_features %>%
mutate(value = 1)
id_df_wide <- id_f_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
id_df_wide <- as.data.frame(id_df_wide)
id_df_wide <- id_df_wide %>% mutate(SPF_Gavage = 0)
all_taxa <- all_taxa %>% select(c("feature", "Cohort","annotation")) %>% unique()
df_long <- all_taxa %>%
mutate(value = 1)
df_wide <- df_long %>%
pivot_wider(names_from = Cohort, values_from = value, values_fill = 0)
df_wide <- as.data.frame(df_wide)
df_wide <- df_wide %>% mutate(SPF_Gavage = 0)
df_wide <- as.data.frame(df_wide)
all_datasets <- names(df_wide)[-(1:2)]
gmm_upset <- upset(df_wide, all_datasets,
themes=upset_default_themes(axis.title = element_text(color = 'black'),
axis.text=element_text(color='black'),
axis.ticks = element_line(color = 'black')),
base_annotations=list(
'Intersection size'=intersection_size(counts=TRUE,
mapping=aes(fill='bars_color')) +
scale_fill_manual(values=c('bars_color'='skyblue'), guide='none')))
id_df_wide$count_ones <- rowSums(id_df_wide[, c(4:8)])
df_filtered <- id_df_wide[id_df_wide$count_ones >= 3, ]
df_filtered <- df_filtered[, -which(names(df_filtered) == "count_ones")]
gmm_of_interest <- df_filtered$feature
names(gmm_of_interest) <-df_filtered$annotation
#write_rds(gmm_of_interest, "Highlighted_GMM_Fig_6.RDS")
### Coef Plots ---
lum_file_paths <- c("Regional-Mouse-Biogeography-Analysis/2021-8-Pathway-Batch-Correction/GOMIXER/GMM-Maaslin2-SITE/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunLineSexSite-1-MsID/all_results.tsv",
"CS_SPF/OMIXER-RPM Results/CS_GMM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Donors-Analysis/differential_GMM_site/GMM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite-1-MsID-DonorID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
"Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/GMM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv")
lum_cohort_prefixes <- c("UCLA_O_SPF",
"CS_SPF",
"HUM_MD_Gavage",
"HUM_SD_Gavage",
"SPF_Gavage")
new_value <- "Distal_Colon"
new_coef <- 0
# color legend for coef plots
my_palette <- c(paletteer_d("basetheme::brutal",6))
names(my_palette) <-c(lum_cohort_prefixes, "UCLA_V_SPF")
cols <- my_palette[names(my_palette) %in% lum_cohort_prefixes]
# combine GMM results and append Map annotation
gmm_of_interest <- readRDS(here("Highlighted_GMM_Fig_6.RDS"))
feature_value <- gmm_of_interest[1]
data_all <- process_results_files(lum_file_paths, feature_value, new_value, new_coef, lum_cohort_prefixes)
