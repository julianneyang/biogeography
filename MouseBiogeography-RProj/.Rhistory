si_input_data <- df_input_data[, si_samples]
col_samples <- df_input_metadata %>% filter(Site_General =="Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
col_input_data <- df_input_data[, col_samples]
duo_samples <- df_input_metadata %>% filter(Site =="Duodenum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
duo_input_data <- df_input_data[, duo_samples]
jej_samples <- df_input_metadata %>% filter(Site =="Jejunum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
jej_input_data <- df_input_data[, jej_samples]
ile_samples <- df_input_metadata %>% filter(Site =="Ileum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
ile_input_data <- df_input_data[, ile_samples]
cec_samples <- df_input_metadata %>% filter(Site =="Cecum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
cec_input_data <- df_input_data[, cec_samples]
PC_samples <- df_input_metadata %>% filter(Site =="Proximal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
PC_input_data <- df_input_data[, PC_samples]
DC_samples <- df_input_metadata %>% filter(Site =="Distal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
DC_input_data <- df_input_data[, DC_samples]
here::i_am("MouseBiogeography-RProj/HumGMM-SITE-TYPE-Maaslin2-Hum.R")
input_data <- read.table("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/modules.tsv", header=TRUE, row.names=1)
df_input_data<-as.data.frame(input_data)
input_metadata <-read.table("Humanized-Biogeography-Analysis/Humanized Metadata.tsv.txt",header=TRUE, row.names=1) #mapping file
row.names(input_metadata)
target <- colnames(df_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
input_metadata$SampleID <- row.names(input_metadata)
df_input_metadata <- as.data.frame(input_metadata)
df_input_metadata$Sequencing_Run <- factor(df_input_metadata$Sequencing_Run)
df_input_metadata$MouseID <- factor(df_input_metadata$MouseID)
df_input_metadata$Sex <- factor(df_input_metadata$Sex)
df_input_metadata$Type <- factor(df_input_metadata$Type, levels=c("Luminal", "Mucosal"))
sapply(df_input_metadata,levels)
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
muc_samples <- df_input_metadata %>% filter(Type =="Mucosal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
muc_input_data <- df_input_data[, muc_samples]
## Get Site datasets to test DC vs all ---
si_samples <- df_input_metadata %>% filter(Site_General =="SI" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
si_input_data <- df_input_data[, si_samples]
col_samples <- df_input_metadata %>% filter(Site_General =="Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
col_input_data <- df_input_data[, col_samples]
duo_samples <- df_input_metadata %>% filter(Site =="Duodenum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
duo_input_data <- df_input_data[, duo_samples]
jej_samples <- df_input_metadata %>% filter(Site =="Jejunum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
jej_input_data <- df_input_data[, jej_samples]
ile_samples <- df_input_metadata %>% filter(Site =="Ileum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
ile_input_data <- df_input_data[, ile_samples]
cec_samples <- df_input_metadata %>% filter(Site =="Cecum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
cec_input_data <- df_input_data[, cec_samples]
PC_samples <- df_input_metadata %>% filter(Site =="Proximal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
PC_input_data <- df_input_data[, PC_samples]
DC_samples <- df_input_metadata %>% filter(Site =="Distal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
DC_input_data <- df_input_data[, DC_samples]
#Luminal
target <- colnames(lum_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
df_input_metadata$Site_General <- factor(df_input_metadata$Site_General, levels=c("Colon","SI"))
fit_data = Maaslin2(input_data=lum_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite_General-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site_General"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
df_input_metadata$Site <- factor(df_input_metadata$Site, levels=c("Distal_Colon", "Proximal_Colon", "Cecum", "Ileum", "Jejunum", "Duodenum"))
fit_data = Maaslin2(input_data=lum_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Mucosal
target <- colnames(muc_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
df_input_metadata$Site_General <- factor(df_input_metadata$Site_General, levels=c("Colon","SI"))
df_input_metadata$Site_General <- factor(df_input_metadata$Site_General, levels=c("Colon","SI"))
fit_data = Maaslin2(input_data=muc_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM_ColonRef-CLR-Muc-ComBat-SeqRunSexSite_General-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site_General"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
df_input_metadata$Site <- factor(df_input_metadata$Site, levels=c("Distal_Colon", "Proximal_Colon", "Cecum", "Ileum", "Jejunum", "Duodenum"))
fit_data = Maaslin2(input_data=muc_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Distal_Colon -overfitting
target <- colnames(DC_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=DC_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-DistalColon-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE, plot_scatter = FALSE)
#Proximal_Colon -overfitting
target <- colnames(PC_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-ProximalColon-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Cecum
target <- colnames(cec_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-Cecum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE )
#Ileum
target <- colnames(ile_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-Ileum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Jejunum
target <- colnames(jej_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-Jejunum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Duodenum
target <- colnames(duo_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-Duodenum-ComBat-SexType-1-MsID", fixed_effects = c("Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Colon
target <- colnames(col_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-Colon-ComBat-SeqRunSexSiteType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site","Type"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE, plot_scatter = FALSE)
#SI
target <- colnames(si_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-LumRef-CLR-SI-ComBat-SeqRunSexSiteType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site","Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE, plot_scatter = FALSE)
here::i_am("MouseBiogeography-RProj/HumGMM-SITE-TYPE-Maaslin2-Hum.R")
input_data <- read.table("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/modules.tsv", header=TRUE, row.names=1)
df_input_data<-as.data.frame(input_data)
input_metadata <-read.table("Humanized-Biogeography-Analysis/Humanized Metadata.tsv.txt",header=TRUE, row.names=1) #mapping file
row.names(input_metadata)
target <- colnames(df_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
input_metadata$SampleID <- row.names(input_metadata)
df_input_metadata <- as.data.frame(input_metadata)
df_input_metadata$Sequencing_Run <- factor(df_input_metadata$Sequencing_Run)
df_input_metadata$MouseID <- factor(df_input_metadata$MouseID)
df_input_metadata$Sex <- factor(df_input_metadata$Sex)
df_input_metadata$Type <- factor(df_input_metadata$Type, levels=c("Luminal", "Mucosal"))
sapply(df_input_metadata,levels)
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
input_data <- read.table("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/modules.tsv", header=TRUE, row.names=1)
df_input_data<-as.data.frame(input_data)
input_metadata <-read.table("Humanized-Biogeography-Analysis/Humanized Metadata.tsv.txt",header=TRUE, row.names=1) #mapping file
row.names(input_metadata)
target <- colnames(df_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
input_metadata$SampleID <- row.names(input_metadata)
df_input_metadata <- as.data.frame(input_metadata)
df_input_metadata$Sequencing_Run <- factor(df_input_metadata$Sequencing_Run)
df_input_metadata$MouseID <- factor(df_input_metadata$MouseID)
df_input_metadata$Sex <- factor(df_input_metadata$Sex)
df_input_metadata$Type <- factor(df_input_metadata$Type, levels=c("Luminal", "Mucosal"))
sapply(df_input_metadata,levels)
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
muc_samples <- df_input_metadata %>% filter(Type =="Mucosal" & Genotype =="WT" & DSS_Treatment=="No" , SampleID %in% names(df_input_data)) %>% pull(SampleID)
muc_input_data <- df_input_data[, muc_samples]
muc_samples <- df_input_metadata %>% filter(Type =="Mucosal" & Genotype =="WT"  , SampleID %in% names(df_input_data)) %>% pull(SampleID)
muc_input_data <- df_input_data[, muc_samples]
here::i_am("MouseBiogeography-RProj/HumGBM-SITE-TYPE-Maaslin2-Hum.R")
here::i_am("MouseBiogeography-RProj/HumGBM-SITE-TYPE-Maaslin2-SPF.R")
here::i_am("MouseBiogeography-RProj/HumGBM-SITE-TYPE-Maaslin2-SPF.R")
input_data <- read.table("Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/modules.tsv", header=TRUE, row.names=1)
df_input_data<-as.data.frame(input_data)
input_metadata <-read.table("Humanized-Biogeography-Analysis/Humanized Metadata.tsv.txt",header=TRUE, row.names=1) #mapping file
row.names(input_metadata)
target <- colnames(df_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
input_metadata$SampleID <- row.names(input_metadata)
df_input_metadata <- as.data.frame(input_metadata)
df_input_metadata$Sequencing_Run <- factor(df_input_metadata$Sequencing_Run)
df_input_metadata$MouseID <- factor(df_input_metadata$MouseID)
df_input_metadata$Sex <- factor(df_input_metadata$Sex)
df_input_metadata$Type <- factor(df_input_metadata$Type, levels=c("Luminal", "Mucosal"))
sapply(df_input_metadata,levels)
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
View(lum_input_data)
input_data <- read.table("Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/modules.tsv", header=TRUE, row.names=1)
df_input_data<-as.data.frame(input_data)
input_metadata <-read.table("Humanized-Biogeography-Analysis/Humanized Metadata.tsv.txt",header=TRUE, row.names=1) #mapping file
row.names(input_metadata)
names(input_metadata)
target <- colnames(df_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
input_metadata$SampleID <- row.names(input_metadata)
df_input_metadata <- as.data.frame(input_metadata)
df_input_metadata$Sequencing_Run <- factor(df_input_metadata$Sequencing_Run)
df_input_metadata$MouseID <- factor(df_input_metadata$MouseID)
df_input_metadata$Sex <- factor(df_input_metadata$Sex)
df_input_metadata$Type <- factor(df_input_metadata$Type, levels=c("Luminal", "Mucosal"))
sapply(df_input_metadata,levels)
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
muc_samples <- df_input_metadata %>% filter(Type =="Mucosal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
muc_input_data <- df_input_data[, muc_samples]
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT" & DSS_Treatment=="No" & Microbiota=="Cedars_SPF", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT" & DSS_Treatment=="No" & Microbiota=="Cedars_SPF", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT"
)
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
muc_samples <- df_input_metadata %>% filter(Type =="Mucosal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
muc_input_data <- df_input_data[, muc_samples]
## Get Site datasets to test DC vs all ---
si_samples <- df_input_metadata %>% filter(Site_General =="SI" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
si_input_data <- df_input_data[, si_samples]
col_samples <- df_input_metadata %>% filter(Site_General =="Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
col_input_data <- df_input_data[, col_samples]
duo_samples <- df_input_metadata %>% filter(Site =="Duodenum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
duo_input_data <- df_input_data[, duo_samples]
jej_samples <- df_input_metadata %>% filter(Site =="Jejunum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
jej_input_data <- df_input_data[, jej_samples]
ile_samples <- df_input_metadata %>% filter(Site =="Ileum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
ile_input_data <- df_input_data[, ile_samples]
cec_samples <- df_input_metadata %>% filter(Site =="Cecum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
cec_input_data <- df_input_data[, cec_samples]
PC_samples <- df_input_metadata %>% filter(Site =="Proximal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
PC_input_data <- df_input_data[, PC_samples]
DC_samples <- df_input_metadata %>% filter(Site =="Distal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
DC_input_data <- df_input_data[, DC_samples]
#Luminal
target <- colnames(lum_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
#Luminal
target <- colnames(lum_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
df_input_metadata$Site_General <- factor(df_input_metadata$Site_General, levels=c("Colon","SI"))
fit_data = Maaslin2(input_data=lum_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite_General-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site_General"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
df_input_metadata$Site <- factor(df_input_metadata$Site, levels=c("Distal_Colon", "Proximal_Colon", "Cecum", "Ileum", "Jejunum", "Duodenum"))
fit_data = Maaslin2(input_data=lum_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Mucosal
target <- colnames(muc_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
df_input_metadata$Site_General <- factor(df_input_metadata$Site_General, levels=c("Colon","SI"))
fit_data = Maaslin2(input_data=muc_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM_ColonRef-CLR-Muc-ComBat-SeqRunSexSite_General-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site_General"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
df_input_metadata$Site <- factor(df_input_metadata$Site, levels=c("Distal_Colon", "Proximal_Colon", "Cecum", "Ileum", "Jejunum", "Duodenum"))
fit_data = Maaslin2(input_data=muc_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Distal_Colon -overfitting
target <- colnames(DC_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=DC_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-DistalColon-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE, plot_scatter = FALSE)
#Proximal_Colon -overfitting
target <- colnames(PC_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-ProximalColon-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Cecum
target <- colnames(cec_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Cecum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE )
#Ileum
target <- colnames(ile_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Ileum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Jejunum
target <- colnames(jej_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Jejunum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Duodenum
target <- colnames(duo_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Duodenum-ComBat-SexType-1-MsID", fixed_effects = c("Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Colon
target <- colnames(col_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Colon-ComBat-SeqRunSexSiteType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site","Type"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE, plot_scatter = FALSE)
#SI
target <- colnames(si_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-SI-ComBat-SeqRunSexSiteType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site","Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE, plot_scatter = FALSE)
here::i_am("MouseBiogeography-RProj/HumGBM-SITE-TYPE-Maaslin2-SPF.R")
input_data <- read.table("Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/modules.tsv", header=TRUE, row.names=1)
df_input_data<-as.data.frame(input_data)
input_metadata <-read.table("Humanized-Biogeography-Analysis/Humanized Metadata.tsv.txt",header=TRUE, row.names=1) #mapping file
row.names(input_metadata)
target <- colnames(df_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
input_metadata$SampleID <- row.names(input_metadata)
df_input_metadata <- as.data.frame(input_metadata)
df_input_metadata$Sequencing_Run <- factor(df_input_metadata$Sequencing_Run)
df_input_metadata$MouseID <- factor(df_input_metadata$MouseID)
df_input_metadata$Sex <- factor(df_input_metadata$Sex)
df_input_metadata$Type <- factor(df_input_metadata$Type, levels=c("Luminal", "Mucosal"))
sapply(df_input_metadata,levels)
## Get Luminal and Mucosal datasets to test DC vs all ---
lum_samples <- df_input_metadata %>% filter(Type =="Luminal" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
lum_input_data <- df_input_data[, lum_samples]
muc_samples <- df_input_metadata %>% filter(Type =="Mucosal" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
muc_input_data <- df_input_data[, muc_samples]
## Get Site datasets to test DC vs all ---
si_samples <- df_input_metadata %>% filter(Site_General =="SI" & Genotype =="WT" & DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
si_input_data <- df_input_data[, si_samples]
col_samples <- df_input_metadata %>% filter(Site_General =="Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
col_input_data <- df_input_data[, col_samples]
duo_samples <- df_input_metadata %>% filter(Site =="Duodenum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
duo_input_data <- df_input_data[, duo_samples]
jej_samples <- df_input_metadata %>% filter(Site =="Jejunum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
jej_input_data <- df_input_data[, jej_samples]
ile_samples <- df_input_metadata %>% filter(Site =="Ileum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
ile_input_data <- df_input_data[, ile_samples]
cec_samples <- df_input_metadata %>% filter(Site =="Cecum" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
cec_input_data <- df_input_data[, cec_samples]
PC_samples <- df_input_metadata %>% filter(Site =="Proximal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
PC_input_data <- df_input_data[, PC_samples]
DC_samples <- df_input_metadata %>% filter(Site =="Distal_Colon" & Genotype =="WT"& DSS_Treatment=="No", SampleID %in% names(df_input_data)) %>% pull(SampleID)
DC_input_data <- df_input_data[, DC_samples]
## Run Maaslin2 ---
#Luminal
target <- colnames(lum_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
df_input_metadata$Site_General <- factor(df_input_metadata$Site_General, levels=c("Colon","SI"))
fit_data = Maaslin2(input_data=lum_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-ColonRef-CLR-Lum-ComBat-SeqRunSexSite_General-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site_General"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
df_input_metadata$Site <- factor(df_input_metadata$Site, levels=c("Distal_Colon", "Proximal_Colon", "Cecum", "Ileum", "Jejunum", "Duodenum"))
fit_data = Maaslin2(input_data=lum_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Mucosal
target <- colnames(muc_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
df_input_metadata$Site_General <- factor(df_input_metadata$Site_General, levels=c("Colon","SI"))
fit_data = Maaslin2(input_data=muc_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM_ColonRef-CLR-Muc-ComBat-SeqRunSexSite_General-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site_General"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
df_input_metadata$Site <- factor(df_input_metadata$Site, levels=c("Distal_Colon", "Proximal_Colon", "Cecum", "Ileum", "Jejunum", "Duodenum"))
fit_data = Maaslin2(input_data=muc_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
## Run Maaslin2 ---
#Distal_Colon -overfitting
target <- colnames(DC_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=DC_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-DistalColon-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE, plot_scatter = FALSE)
#Proximal_Colon -overfitting
target <- colnames(PC_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-ProximalColon-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE,plot_scatter = FALSE)
#Cecum
target <- colnames(cec_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Cecum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE )
#Ileum
target <- colnames(ile_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Ileum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Jejunum
target <- colnames(jej_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Jejunum-ComBat-SeqRunSexType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Duodenum
target <- colnames(duo_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Duodenum-ComBat-SexType-1-MsID", fixed_effects = c("Sex", "Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE,plot_scatter = FALSE)
#Colon
target <- colnames(col_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-Colon-ComBat-SeqRunSexSiteType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site","Type"), random_effects = c("MouseID"),normalization="clr", transform ="none",plot_heatmap = FALSE, plot_scatter = FALSE)
#SI
target <- colnames(si_input_data)
df_input_metadata = input_metadata[match(target, row.names(input_metadata)),]
target == row.names(df_input_metadata)
fit_data = Maaslin2(input_data=df_input_data, input_metadata=df_input_metadata, output = "Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-LumRef-CLR-SI-ComBat-SeqRunSexSiteType-1-MsID", fixed_effects = c("Sequencing_Run","Sex", "Site","Type"), random_effects = c("MouseID"),normalization="clr", transform ="none", plot_heatmap = FALSE, plot_scatter = FALSE)
###Purpose: Aggregate all significant results from each of 6 intestinal sites into one vector; then query this vector against "all results" output from each of six sites
library(data.table)
library(janitor)
library(stringi)
library(stringr)
library(funrar)
library(lessR)
library(ggplot2)
library(tidyr)
library(gplots)
library(dplyr)
library(plyr)
library(Microbiome.Biogeography)
setwd("C:/Users/Jacobs Laboratory/Desktop/Mouse_Biogeography_Julianne/")
here::i_am("MouseBiogeography-RProj/HumGBM-SITE-Heatmap.R")
###for SITE:DC vs all data
find_concordant_features_across_sites <- function(filepath_to_significant_results_tsv) {
luminal<-read.table(filepath_to_significant_results_tsv, header=TRUE)
duodenum_significant<-filter(luminal, metadata=="Site" & value=="Duodenum" &qval<0.05)
a<-duodenum_significant$feature
jejunum_significant<-filter(luminal, metadata=="Site" & value=="Jejunum" &qval<0.05)
b<-jejunum_significant$feature
ileum_significant<-filter(luminal, metadata=="Site" & value=="Ileum" &qval<0.05)
c<-ileum_significant$feature
cecum_significant<-filter(luminal, metadata=="Site" & value=="Cecum" &qval<0.05)
d<-cecum_significant$feature
pc_significant<-filter(luminal, metadata=="Site" & value=="Proximal_Colon" &qval<0.05)
e<-pc_significant$feature
DC_significant<-filter(luminal, metadata=="Site" & value=="Distal_Colon" &qval<0.05)
f<-DC_significant$feature
joinab<- union(a,b)
joincd<- union(c,d)
joinef<- union(e,f)
joinabcd <- union(joinab,joincd)
target<-union(joinabcd,joinef)
return(target)
}
# Luminal - 13 concordant features
lum_target <- find_concordant_features_across_sites("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv")
# Mucosal - 17 concordant features
muctarget <- find_concordant_features_across_sites("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv")
cols=c("#440154FF","#46337EFF", "#365C8DFF" ,"#277F8EFF", "#1FA187FF", "#4AC16DFF", "#9FDA3AFF", "#FDE725FF")
bk =c(-2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2)
muc_GMM_map <- generate_GBM_heat_map_by_site("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
targetvector = muctarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"CS SPF Mucosal",
cols,
bk)
muc_GMM_map <- generate_GBM_heat_map_by_site("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
targetvector = muctarget,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM Gavage Mucosal",
cols,
bk)
dev.new(width=15, height=10)
muc_GMM_map
cols=c("#440154FF","#46337EFF", "#365C8DFF" ,"#277F8EFF", "#1FA187FF", "#4AC16DFF", "#9FDA3AFF", "#FDE725FF")
bk =c(-2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2)
lum_GMM_map <- generate_GBM_heat_map_by_site("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
targetvector = lum_target,
path_to_Module_Key = "GBM_Module_Key.csv",
"CS_SPF_Luminal",
cols,
bk)
dev.new(width=15, height=10)
lum_GMM_map
cols=c("#440154FF","#46337EFF", "#365C8DFF" ,"#277F8EFF", "#1FA187FF", "#4AC16DFF", "#9FDA3AFF", "#FDE725FF")
bk =c(-2, -1.5, -1, -0.5, 0, 0.5, 1, 1.5, 2)
lum_GMM_map <- generate_GBM_heat_map_by_site("Humanized-Biogeography-Analysis/Source RPCA/Hum/OMIXER-RPM/Hum_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/all_results.tsv",
targetvector = lum_target,
path_to_Module_Key = "GBM_Module_Key.csv",
"HUM Gavage Luminal",
cols,
bk)
dev.new(width=15, height=10)
lum_GMM_map
here::i_am("MouseBiogeography-RProj/HumGBM-SITE-Heatmap-SPF.R")
###for SITE:DC vs all data
find_concordant_features_across_sites <- function(filepath_to_significant_results_tsv) {
luminal<-read.table(filepath_to_significant_results_tsv, header=TRUE)
duodenum_significant<-filter(luminal, metadata=="Site" & value=="Duodenum" &qval<0.05)
a<-duodenum_significant$feature
jejunum_significant<-filter(luminal, metadata=="Site" & value=="Jejunum" &qval<0.05)
b<-jejunum_significant$feature
ileum_significant<-filter(luminal, metadata=="Site" & value=="Ileum" &qval<0.05)
c<-ileum_significant$feature
cecum_significant<-filter(luminal, metadata=="Site" & value=="Cecum" &qval<0.05)
d<-cecum_significant$feature
pc_significant<-filter(luminal, metadata=="Site" & value=="Proximal_Colon" &qval<0.05)
e<-pc_significant$feature
DC_significant<-filter(luminal, metadata=="Site" & value=="Distal_Colon" &qval<0.05)
f<-DC_significant$feature
joinab<- union(a,b)
joincd<- union(c,d)
joinef<- union(e,f)
joinabcd <- union(joinab,joincd)
target<-union(joinabcd,joinef)
return(target)
}
###for SITE:DC vs all data
find_concordant_features_across_sites <- function(filepath_to_significant_results_tsv) {
luminal<-read.table(filepath_to_significant_results_tsv, header=TRUE)
duodenum_significant<-filter(luminal, metadata=="Site" & value=="Duodenum" &qval<0.05)
a<-duodenum_significant$feature
jejunum_significant<-filter(luminal, metadata=="Site" & value=="Jejunum" &qval<0.05)
b<-jejunum_significant$feature
ileum_significant<-filter(luminal, metadata=="Site" & value=="Ileum" &qval<0.05)
c<-ileum_significant$feature
cecum_significant<-filter(luminal, metadata=="Site" & value=="Cecum" &qval<0.05)
d<-cecum_significant$feature
pc_significant<-filter(luminal, metadata=="Site" & value=="Proximal_Colon" &qval<0.05)
e<-pc_significant$feature
DC_significant<-filter(luminal, metadata=="Site" & value=="Distal_Colon" &qval<0.05)
f<-DC_significant$feature
joinab<- union(a,b)
joincd<- union(c,d)
joinef<- union(e,f)
joinabcd <- union(joinab,joincd)
target<-union(joinabcd,joinef)
return(target)
}
# Luminal - 1 concordant features
lum_target <- find_concordant_features_across_sites("Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Lum-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv")
# Mucosal - 17 concordant features
muctarget <- find_concordant_features_across_sites("Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv")
# Mucosal - 0 concordant features
muctarget <- find_concordant_features_across_sites("Humanized-Biogeography-Analysis/Source RPCA/SPF/OMIXER-RPM/SPF_GBM/GBM-DCvsAll-CLR-Muc-ComBat-SeqRunSexSite-1-MsID/significant_results.tsv")
if (!requireNamespace('BiocManager', quietly = TRUE))
install.packages('BiocManager')
BiocManager::install('EnhancedVolcano')
library(EnhancedVolcano)
